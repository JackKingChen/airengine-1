
Texture2D TexDepth		:	register(t0);
Texture2D Tex2x2		:	register(t1);
Texture2D TexDiff		:	register(t2);
Texture2D TexNor		:	register(t3);
Texture2D Tex4x4		:	register(t4);
SamplerState	ss_wrappoint	:	register(s0);
SamplerState	ss_clampline2	:	register(s1);


#define SAMPLER_NUM 2
#define STEP_NUM	4
cbuffer cbPerCamera		: register( b1 )
{
    matrix  ViewProjection;
	float4	vCameraDir;
	float4	vCameraPosition;
	float4	vCameraUp;
	float4	vVP_NearFar;
   
}

cbuffer	cbPerMaterial	:	register(b3)
{
	float4x4 matViewProjectionInverse;
	//float4 OccSize;
}

#define	invViewport		vVP_NearFar.xy
#define	vViewPosition	vCameraPosition

float2 UV_XY(float2 uv){
	return	uv*float2(2,-2)+float2(-1,1);
};

float2 GetOffset2(int   i,float rotoffset){
   float2 initxy   =   float2(0,1);
   float fsin,fcos;
   sincos((i*0.25f/SAMPLER_NUM+rotoffset)*2.0f*3.1415926f,fsin,fcos);
   float2x2 rot   =   float2x2(fcos,-fsin,fsin,fcos);
   return mul(initxy,rot)*float2(1,-1);
};

float4   GenPos(float2 fuv,float iLod){
      float4 XY;
      XY.xy     =   UV_XY(fuv);     
      XY.z      =   TexDepth.SampleLevel(ss_clampline2,fuv,iLod).x;
      XY.w      =   1;
      XY       =   mul(matViewProjectionInverse,XY);
      XY      /=   XY.w;
      
      return XY;
};


float2 GetOffset(float4 off,float4 option){
   return lerp(off.zw,float2(1,-1)*off.xy,option.x)*option.y;
};

struct VS_OUTPUT
{
    float4 Position     : SV_POSITION; // vertex position
	float2 UV			: TEXCOORD0;
};



float4 main( VS_OUTPUT Input ) : SV_TARGET
{
   float2 halfPixel   =   0.5f*invViewport;
   float2   uv=   Input.UV;//+halfPixel;
   float2	offsetuv	=	uv+halfPixel;
   float2   xy=   UV_XY(uv);//float2(uv.x*2-1,uv.y*-2+1);//*temp.xy+temp.zw;

   //float	offset   =  Tex2x2.Sample(ss_wrappoint,uv/invViewport/2).x;
   float4	noise4	=	Tex4x4.Sample(ss_wrappoint,uv/invViewport/4);
   float	offset	=	noise4.w;
   float4   oldPos;
   oldPos.xy      =   xy;
   oldPos.z       =   TexDepth.Sample(ss_wrappoint,uv).x;
   oldPos.w      =   1;
   oldPos         =   mul(matViewProjectionInverse,oldPos);
   
   oldPos/=oldPos.w;

   //normalize(oldNor);
   //oldNor         =   normalize(mul(oldNor,(float3x3)matViewProjectionInverse));
   
   float3 viewDir   =   -normalize(vViewPosition.xyz-oldPos.xyz);
   float3   oldNor=   TexNor.Sample(ss_wrappoint,uv).xyz;
   oldNor=oldNor*2-1;
   //oldPos.xyz+=oldNor.xyz;

   float occ=0;
   float2 fPixel   =   18*invViewport*noise4.y;//*5;//OccSize.y;
   
   float	rotoffset	=	offset+(noise4.z)*0.25f/SAMPLER_NUM;

   //[loop]
   //int i = 0;
   for(int i=0;i<SAMPLER_NUM;i++){

      float2   tempuv   =   GetOffset2(i,rotoffset)*fPixel;
      
      float ffinaldot   =   1;
      [loop]
      for(int j=0;j<STEP_NUM;j++){
         float2 UV     =   tempuv*(j+1)   +uv;
         float4 XY     =   GenPos(UV,0);
         XY.xyz   -=   oldPos.xyz;
         float fdot   =   dot(viewDir.xyz,normalize(XY.xyz));
         if(fdot   <   ffinaldot)
            ffinaldot   =   fdot;
      }

      occ += ffinaldot;//saturate(d*0.5f+0.5f);
   }

   float fAO   =   (occ/SAMPLER_NUM)*0.5+0.5;
   //float4 c	=	fAO*TexDiff.Sample(ss_wrappoint,uv);
   return fAO;///SAMPLER_NUM;//(GetOffset(offset[5]  ,opt).xyxy/8)*0.5+0.5;///4;
}

