cbuffer cbPerCamera : register( b1 )
{
    matrix  ViewProjection;
	float4	vCameraDir;
	float4	vCameraPosition;
	float4	vCameraUp;
	float4	vVP_NearFar;
   
}
struct VS_OUTPUT
{
    float4 Position     : SV_POSITION; // vertex position
	float3 Normal       : TEXCOORD0;
    float2 TextureUV    : TEXCOORD1;   // vertex texture coords 
	float3 Tangent		: TEXCOORD2;
	float4 WPos			: TEXCOORD3;
	float4 ProjPos		: TEXCOORD4;
};

struct	PS_OUTPUT{
	float4	Depth			:	SV_Target0;
};

PS_OUTPUT main( VS_OUTPUT Input ){

	PS_OUTPUT	Out;

	float z	=	distance(vCameraPosition.xyz,Input.WPos.xyz);
	Out.Depth			=	float4(z,z*z,0,1);
	//Out.Depth			=	float4(Input.ProjPos.z/Input.ProjPos.w,0,0,0);
	return	Out;
   
}
